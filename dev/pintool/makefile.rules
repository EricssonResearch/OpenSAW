##############################################################
#
# This file includes all the test targets as well as all the
# non-default build rules and test recipes.
#
##############################################################


##############################################################
#
# Test targets
#
##############################################################
TOOL_CXXFLAGS:=$(filter-out -Werror,$(TOOL_CXXFLAGS))

OBJS = $(OBJDIR)pivot.o $(OBJDIR)pin_trace.o $(OBJDIR)pin_taint.o $(OBJDIR)pin_frame.o $(OBJDIR)pin_misc.o $(OBJDIR)reg_mapping_pin.o $(OBJDIR)winsyscalls.o $(FORMATOBJS)



###### Place all generic definitions here ######
BAP_ROOT := /opt/bap-0.7/

TRACEDIR = $(BAP_ROOT)/libasmir/src/traces
TRACEFORMATDIR = $(BAP_ROOT)/libtracewrap/libtrace/src/cpp
TRACEFORMATCOMMON = $(BAP_ROOT)/libtracewrap/libtrace/src/common
TRACEFORMATPBDIR = $(TRACEFORMATDIR)/pb
LIBTRACE = $(TRACEFORMATDIR)/libtrace.a
PROTOBUFDIR = $(BAP_ROOT)/libtracewrap/libtrace/protobuf/src
PROTOBUFLIBDIR = $(PROTOBUFDIR)/.libs

TOOL_CXXFLAGS += -std=c++0x -I$(TRACEFORMATCOMMON) -I$(BAP_ROOT)/libasmir/include -I$(BAP_ROOT)/libasmir/src/traces -I$(TRACEFORMATDIR) -I$(TRACEFORMATPBDIR) -I$(PROTOBUFDIR) -DUSING_PIN
TOOL_LPATHS += -L$(PROTOBUFLIBDIR)
TOOL_LIBS += $(LIBTRACE) -Wl,-rpath=$(PROTOBUFLIBDIR) -pthread  -pthread -lprotobuf -lz -lpthread

# This defines tests which run tools of the same name.  This is simply for convenience to avoid
# defining the test name twice (once in TOOL_ROOTS and again in TEST_ROOTS).
# Tests defined here should not be defined in TOOL_ROOTS and TEST_ROOTS.
TEST_TOOL_ROOTS := gentrace

TOOLS = $(TEST_TOOL_ROOTS:%=$(OBJDIR)%$(PINTOOL_SUFFIX))

# This defines the tests to be run that were not already defined in TEST_TOOL_ROOTS.
TEST_ROOTS :=

# This defines a list of tests that should run in the "short" sanity. Tests in this list must also
# appear either in the TEST_TOOL_ROOTS or the TEST_ROOTS list.
# If the entire directory should be tested in sanity, assign TEST_TOOL_ROOTS and TEST_ROOTS to the
# SANITY_SUBSET variable in the tests section below (see example in makefile.rules.tmpl).
SANITY_SUBSET :=

# This defines the tools which will be run during the the tests, and were not already defined in
# TEST_TOOL_ROOTS.
TOOL_ROOTS :=

# This defines the static analysis tools which will be run during the the tests. They should not
# be defined in TEST_TOOL_ROOTS. If a test with the same name exists, it should be defined in
# TEST_ROOTS.
# Note: Static analysis tools are in fact executables linked with the Pin Static Analysis Library.
# This library provides a subset of the Pin APIs which allows the tool to perform static analysis
# of an application or dll. Pin itself is not used when this tool runs.
SA_TOOL_ROOTS :=

# This defines all the applications that will be run during the tests.
APP_ROOTS :=

# This defines any additional object files that need to be compiled.
OBJECT_ROOTS :=

# This defines any additional dlls (shared objects), other than the pintools, that need to be compiled.
DLL_ROOTS :=

# This defines any static libraries (archives), that need to be built.
LIB_ROOTS :=


##############################################################
#
# Test recipes
#
##############################################################

# This section contains recipes for tests other than the default.
# See makefile.default.rules for the default test rules.
# All tests in this section should adhere to the naming convention: <testname>.test


##############################################################
#
# Build rules
#

all: listregs tools
tools: $(OBJDIR) $(TOOLS)

$(OBJDIR):
	-mkdir "$(OBJDIR)"


$(OBJDIR)%.o : $(TRACEDIR)/%.cpp
	$(CXX) -c $(TOOL_CXXFLAGS) -std=c++0x $(PIN_CXXFLAGS) ${COMP_OBJ} ${OUTOPT}$@ $<

$(OBJDIR)%.o : %.cpp
	$(CXX) -c $(TOOL_CXXFLAGS) -std=c++0x $(PIN_CXXFLAGS) ${COMP_OBJ} ${OUTOPT}$@ $<

$(OBJDIR)%.o : $(TRACEFORMATPBDIR)/%.cc
	$(CXX) -c $(TOOL_CXXFLAGS) $(PIN_CXXFLAGS) ${COMP_OBJ} ${OUTOPT}$@ $<

$(OBJDIR)%.o : $(TRACEFORMATDIR)/%.cpp
	$(CXX) -c $(TOOL_CXXFLAGS) $(PIN_CXXFLAGS) ${COMP_OBJ} ${OUTOPT}$@ $<

pivottest: $(OBJDIR)pivot.o pivottest.cpp
	$(CXX) -o $@ $^ $(TOOL_CXXFLAGS) $(PIN_CXXFLAGS)

listregs: listregs.cpp
	$(CXX) -o $@ $^ $(TOOL_CXXFLAGS) $(PIN_CXXFLAGS)

pinregs.h : listregs $(OBJDIR)ctxtest$(PINTOOL_SUFFIX)
	./listregs pinregs.h

$(TOOLS): %$(PINTOOL_SUFFIX) : %.o $(OBJS) $(LIBTRACE)
	${LINKER} $(TOOL_LDFLAGS) $(LINK_DEBUG) ${LINK_EXE}$@ $(OBJS) $< ${TOOL_LPATHS} $(TOOL_LIBS) $(DBG) $(LIB_PATHS) $(LIBS)